#!/usr/bin/env bash

SCRIPT_HOME="$( cd "$(dirname "0" )" && pwd )"

# Test for the docker command line tools
docker -v >/dev/null 2>&1 || { echo >&2 "Docker is not installed properly, please be sure the command line libraries are available.  Aborting."; exit 1; }

########################################################
# Function Defs                                        #
########################################################

# Builds the development environment
function up()
{
    if [ -z "$1" ]
    then
        docker-compose up -d
    fi

    if [ "$1" = "build" ]
    then
        echo "Building dev environment, this may take several minutes"
        docker-compose up -d --build
    fi
}

# Shuts down the development environment
function down()
{
    docker-compose down
}

# Destroys all images and containers
function destroy()
{
    if [ "$1" = "nuke" ]
    then
        # Stop all running containers
        docker kill $(docker ps -q)
    else
        # Stop all running containers
        docker-compose down
    fi

    # Delete all containers
    docker rm -f $(docker ps -a -q)
    # Delete all images
    docker rmi -f $(docker images -q)
}

########################################################
# Main                                                 #
########################################################

# Abstracted commands for the developer
case "$1" in
    up)
        up
        ;;
    up-build)
        up "build"
        ;;
    down)
        down
        ;;
    destroy)
        destroy
        ;;
    nuke)
        read -p "Are you sure? " -n 1 -r
        echo #new line
        if [[ $REPLY =~ ^[Yy]$ ]]
        then
            echo "Destroying everything."
            destroy "nuke"
        fi
        ;;
    showImages)
        docker images -a
        ;;
    showContainers)
        docker ps -a -s #Display docker containers and size.
        ;;
    loadDb)
        echo "Stub for db load"
        ;;
    restart)
       echo "Restarting dev environment..."
       down
       up "build"
       ;;
    help)
        cat << HELP_CMDS
    Available CMDS:
        up             : Builds the development environment.
        up-build       : Re-Builds the development environment.
        down           : Shuts the development environment down.
        destroy        : Destroys all of the containers and images for this environment.
        nuke           : Destroys all of the containers and images on the entire system.
        showImages     : Shows all of the docker images running on the machine.
        showContainers : Shows all containers running on the machine.
        loadDb         : Loads a database when provided a valid file.
        restart        : Restarts the docker services; issues a fresh build on up.
HELP_CMDS
        ;;
    *)
        echo "No cmd was specified by the user.  Run ./dev help for more options."
        ;;
esac

exit $?
